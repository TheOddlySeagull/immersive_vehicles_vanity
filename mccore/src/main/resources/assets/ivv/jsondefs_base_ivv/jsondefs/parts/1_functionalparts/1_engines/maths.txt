important crap, set exactly as listed

fuel consumption = engine displacement * 0.108695652
plug horsepower and torque values directly into json using constants builtatlastough_horsepower and builtatlastough_torque, will be modified into final values of engine_obdiii_horsepower and engine_obdiii_torque

/*
definition.fuelConsumption is used to define this engine's part slot size, then variablemodifiers.fuelConsumption is used for the engine's power, calculated by the constants you've set
variablemodifiers.superchargerFuelConsumption then negates vmfc and has the engine consume fuel based off of the displacement. variablemodifiers.superchargerEfficiency stays set to 0 to prevent from interfering with prior math
other constants exist as listed:
- builtatlastough_fuel_efficiency, consumes less fuel at positive values and more at negative values
- builtatlastough_power_efficiency, works similarly to fuel efficiency but with fc power, i would consider it cheaty though as it doesn't show in the engine's horsepower value
- builtatlastough_power_efficiency, works similarly to fuel efficiency but with fc power, i would consider it cheaty though as it doesn't show in the engine's horsepower value
- builtatlastough_backfire_type, -1 is disabled, 0 causes revlimit backfires when upgraded, 1 forces them to always occur at revlimit rpm, 1 causes throttle letoff pops
*/

customizable stuff, guidelines rather than rules

part mass in kg = engine displacement * 32.608695652 + 200
maxrpm = maxsaferpm * 1.0625
